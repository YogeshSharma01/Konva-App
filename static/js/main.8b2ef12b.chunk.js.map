{"version":3,"sources":["header.js","Button.js","Konva.js","index.js"],"names":["Uper","className","Button","useState","dialogVisible","setDialogVisible","IconButton","onClick","size","open","onClose","onSubmit","console","log","Rectangle","shapeProps","isSelected","onSelect","onChange","shapeRef","React","useRef","trRef","useEffect","current","nodes","getLayer","batchDraw","Fragment","onTap","ref","draggable","onDragEnd","e","x","target","y","onTransformEnd","node","scaleX","scaleY","width","Math","max","height","boundBoxFunc","oldBox","newBox","Konva","bgColor","setBgColor","initialRectangles","fill","id","text","cornerRadius","stroke","strokeWidth","rectangles","setRectangles","selectedId","selectShape","checkDeselect","getStage","style","position","window","innerWidth","innerHeight","onMouseDown","onTouchStart","map","rect","i","fontSize","newAttrs","rects","slice","src","alt","event","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b2ef12b.chunk.js","sourcesContent":["import React from 'react';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\nconst Uper = () =>{\n    return (\n        <>\n        <div className=\"main_header\">\n        <div>\n            <h1>Edit Post</h1>\n            <p>Saved</p>\n        </div>\n        <span className=\"container_2\">\n            <p>\n            <DeleteOutlineIcon/>\n            </p>\n            <p>Undo</p>\n        </span>\n\n        </div>\n        </>\n    )\n}\n\nexport default Uper;","import React,{useState} from 'react';\nimport { IconButton } from '@material-ui/core';\nimport { FeedbackDialog } from 'mui-feedback-dialog';\n\n\nconst Button = () => {\n  const [dialogVisible, setDialogVisible] =useState(false);\n\n  return (\n    <>\n\n            <IconButton onClick={() => setDialogVisible(true)} size='medium'>\n               <button className=\"footer_btn\">Schedule Post ></button>\n            </IconButton>\n      \n        <FeedbackDialog\n            open={dialogVisible}\n            onClose={() => setDialogVisible(false)}\n            onSubmit={console.log} />\n\n    </>\n  );\n};\n\nexport default Button;\n","import React,{ useState } from 'react'\nimport Uper from './header';\nimport LineWeightIcon from '@material-ui/icons/LineWeight';\nimport Button from './Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Stage, Layer, Rect, Transformer,Text } from 'react-konva';\n\nconst Rectangle = ({ shapeProps, isSelected, onSelect, onChange }) => {\n    const shapeRef = React.useRef();\n    const trRef = React.useRef();\n  \n    React.useEffect(() => {\n      if (isSelected) {\n        \n        trRef.current.nodes([shapeRef.current]);\n        trRef.current.getLayer().batchDraw();\n      }\n    }, [isSelected]);\n  \n    return (\n      <React.Fragment>\n        <Rect\n          onClick={onSelect}\n          onTap={onSelect}\n          ref={shapeRef}\n          {...shapeProps}\n          draggable\n          onDragEnd={(e) => {\n            onChange({\n              ...shapeProps,\n              x: e.target.x(),\n              y: e.target.y(),\n            });\n          }}\n          onTransformEnd={(e) => {\n            \n            const node = shapeRef.current;\n            const scaleX = node.scaleX();\n            const scaleY = node.scaleY();\n  \n            \n            node.scaleX(1);\n            node.scaleY(1);\n            onChange({\n              ...shapeProps,\n              x: node.x(),\n              y: node.y(),\n             \n              width: Math.max(5, node.width() * scaleX),\n              height: Math.max(node.height() * scaleY),\n            });\n          }}\n        />\n        {isSelected && (\n          <Transformer\n            ref={trRef}\n            boundBoxFunc={(oldBox, newBox) => {\n              // limit resize\n              if (newBox.width < 5 || newBox.height < 5) {\n                return oldBox;\n              }\n              return newBox;\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  };\n  \n  \n\nconst Konva = () =>{\n   \n    const [bgColor, setBgColor] = useState('orange');\n    const changeBG = (event) =>{\n        setBgColor(event.target.style.backgroundColor = \"orange\") ;\n    }\n    const changeBG_2 = (event) =>{\n        setBgColor(event.target.style.backgroundColor = \"white\") ;\n    }\n    // button\n    \n      \n    const initialRectangles = [\n    {\n      x: 20,\n      y: 200,\n      width: 100,\n      height: 50,\n      fill:bgColor,\n      id: 'rect1',\n      text:'hello',\n      cornerRadius:10,\n      stroke: 'white',\n      strokeWidth: 2,\n    },\n  ];\n\n\n    const [rectangles, setRectangles] = React.useState(initialRectangles);\n    const [selectedId, selectShape] = React.useState(null);\n  \n    const checkDeselect = (e) => {\n      \n      const clickedOnEmpty = e.target === e.target.getStage();\n      if (clickedOnEmpty) {\n        selectShape(null);\n      }\n    };\n\n\n    return (\n        <>\n        <Uper/>\n        <div className=\"container\">\n        <div>\n        \n        <Stage style={{position:'absolute'}}\n      width={window.innerWidth}\n      height={window.innerHeight}\n      onMouseDown={checkDeselect}\n      onTouchStart={checkDeselect}\n    >\n      <Layer>\n        {rectangles.map((rect, i) => {\n          return (\n              <>\n              <Text x={20} y={10}  text='Heading' fontSize='50' fill='white'/>\n              <Text  x={20} y={100} text='sub body text' fontSize='30' fill='white'/>\n              <Text x={20} y={140} text='body text' fontSize='30' fill='white'/>\n            <Rectangle \n            className=\"btn\"\n            \n              key={i}\n              shapeProps={rect}\n              isSelected={rect.id === selectedId}\n              onSelect={() => {\n                selectShape(rect.id);\n              }}\n              onChange={(newAttrs) => {\n                const rects = rectangles.slice();\n                rects[i] = newAttrs;\n                setRectangles(rects);\n              }}\n            />\n            </>\n          );\n        })}\n      </Layer>\n    </Stage> \n    \n    <EditIcon className=\"edit_icon\"/>\n \n       \n        <img style={{width:\"100%\", height:\"100vh\"}} src=\"https://s.w-x.co/in-shimla_mountains.jpg\" alt=\"mountain\"></img>\n        </div>\n        <div className=\"footer\">\n        <div className=\"main_footer\">\n        <div onClick={changeBG}  className=\"btn-2\"  ></div>\n        <div onClick={changeBG_2}  className=\"btn-2\"  ></div>\n        <LineWeightIcon className=\"icon\"/>\n\n        <div className=\"main_footer_2\">\n        <h1 className=\"change\">Change Templet + </h1>\n        <Button />\n        </div>\n        </div>\n        </div>\n        </div>\n        </>\n    );\n}\n\nexport default Konva;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Konva from './Konva';\n\nReactDOM.render(\n  <Konva/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}